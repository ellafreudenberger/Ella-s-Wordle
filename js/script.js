// empty array of words to add fetched data to
let words = [];

//  checking code is running in a browser environment and logging title of the current document and wordle-container element
if (typeof window !== 'undefined') {
  console.log('You are on the browser');
  console.log(document.title);
  console.log(document.getElementById('wordle-container'));
}

// fetching data from the local server created with node and turning it into an array: fetch() function initiates the HTTP request to the server and returns a promise that represents the asynchronous operation, .then() method is called on the returned promise to get the response from the server, response.text() method is called on the response object to resolve the response body as text, another .then() method is called on the promise returned by response.text to receive the data and ()split('\n') splits each word on a separate line into a string for the array, and .catch() handles any errors
function fetchDataFromServer() {
  return fetch('assets/words-list')
    .then(response => response.text())
    .then(data => {
      const dataArray = data.split('\n');
      return dataArray;
    })
    .catch(error => {
      console.error('Error fetching data from server:', error);
      return [];
    });
}

// returned dataArray is assigned to the words variable
fetchDataFromServer()
  .then(dataArray => {
    words = dataArray;
    console.log(words);

    // function to set up guessing: total guesses allowed, initial variable for guesses remaining, currentGuess is an empty array for user to add to, nextLetter is initialized with the value 0 to indicate the starting position/index of the next letter to be guessed, random number generated by Math.random() is multiplied by the length of the words array and the words.length represents the number of elements in the words array, Math.floor() rounds down the resulting value to the nearest whole number so a word is chosen at that index
    const totalGuesses = 6;
    let guessesRemaining = totalGuesses;
    let currentGuess = [];
    let nextLetter = 0;
    let correctGuessString = words[Math.floor(Math.random() * words.length)];
    console.log(correctGuessString);

    // creating the game board with rows and boxes
    function initBoard() {
      let board = document.getElementById("game-board");

      for (let r = 0; r < 6; r++) {
        let row = document.createElement("div");
        row.className = "letter-row";

        for (let b = 0; b < 5; b++) {
          let box = document.createElement("div");
          box.className = "letter-box";
          row.appendChild(box);
        }

        board.appendChild(row);
      }
    }

    // keys.forEach loop checks if the text content of the current button (elem.textContent) matches the provided letter and if no conditions are met, the code sets the background color of the button to the provided color
    function colorKeyboardBox(letter, color) {
      const keys = document.querySelectorAll('.key');
      keys.forEach(elem => {
        if (elem.textContent === letter) {
          let oldColor = elem.style.backgroundColor;
          if (oldColor === 'rgb(85, 125, 47)') {
            return;
          }
          if (oldColor === 'rgb(212, 175, 55)' && color !== 'rgb(85, 125, 47)') {
            return;
          }
          elem.style.backgroundColor = color;
        }
      });
    } 

    colorKeyboardBox ();

    // function clears the box text content, removes any visual indication that boxes were previously filled, removes the last element from the currentGuess array, and deletes previously entered letters
    function deleteLetter() {
      if (nextLetter <= 0) {
        return;
      }
    
      let row = document.getElementsByClassName("letter-row")[6 - guessesRemaining];
      let box = row.children[nextLetter - 1];
      
      box.textContent = "";
      box.classList.remove("filled-box");
      currentGuess.splice(-1, 1);
      nextLetter -= 1;
    }

    //
    function checkGuess() {
      const row = document.getElementsByClassName('letter-row')[6 - guessesRemaining];
      const guessString = currentGuess.join("");
      const rightGuess = Array.from(correctGuessString);
      const letterColor = Array(5).fill("grey");
    
      if (guessString.length !== 5) {
        return;
      }
    
      for (let i = 0; i < 5; i++) {
        if (rightGuess[i] === currentGuess[i]) {
          letterColor[i] = "rgb(85, 125, 47)";
          rightGuess[i] = "#";
        } else
          for (let j = 0; j < 5; j++)
            if (rightGuess[j] === currentGuess[i] && letterColor[j] !== "rgb(85, 125, 47)") {
              letterColor[i] = "rgb(212, 175, 55)";
              rightGuess[j] = "#";
              break;
            }
      }
    
      for (let i = 0; i < 5; i++) {
        let box = row.children[i];
        let delay = 250 * i;
    
        setTimeout(() => {
          animateCSS(box, "flipInX");
          box.style.backgroundColor = letterColor[i];
          shadeKeyBoard(guessString.charAt(i), letterColor[i]);
        }, delay);
      }
    
      if (guessString === correctGuessString) {
        guessesRemaining = 0;
        return;
      }
    
      guessesRemaining--;
      currentGuess = [];
      nextLetter = 0;
    }
    
    //
    function insertLetter(pressedKey) {
      if (nextLetter >= 5) return;
    
      const box = document.getElementsByClassName("letter-row")[6 - guessesRemaining].children[nextLetter];
      
      box.textContent = pressedKey.toLowerCase();
      box.classList.add("filled-box");
      
      currentGuess.push(pressedKey.toLowerCase());
      nextLetter++;
    }
    

    //
    document.addEventListener("keyup", (e) => {
      if (guessesRemaining === 0) {
        return;
      }

      let pressedKey = String(e.key);
      if (pressedKey === "Backspace" && nextLetter !== 0) {
        deleteLetter();
        return;
      }

      if (pressedKey === "Enter") {
        checkGuess();
        return;
      }

      if (pressedKey.match(/[a-z]/gi) && pressedKey.length === 1) {
        insertLetter(pressedKey);
      }  
    });

    //
    document.getElementById("key-board").addEventListener("click", (e) => {
      const target = e.target;

      if (!target.classList.contains("key")) {
        return;
      }
      let key = target.textContent;

      if (key === "Del") {
        key = "Backspace";
      }

      document.dispatchEvent(new KeyboardEvent("keyup", { key }));
    });

    initBoard();
  });

